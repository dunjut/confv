apiVersion: v1
kind: ServiceAccount
metadata:
  name: confv-service-account
  namespace: kube-system
  labels:
    app: confv

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: confv
  name: confv-kube-system
rules:
- apiGroups: [""]
  resources: ["pods", "configmaps"]
  verbs: ["get"]

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: confv-kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: confv-kube-system
subjects:
  - kind: ServiceAccount
    name: confv-service-account
    namespace: kube-system

---

apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: confv
  namespace: kube-system
  labels:
    app: confv
spec:
  template:
    metadata:
      labels:
        app: confv
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      serviceAccountName: confv-service-account
      initContainers:
      - name: install-plugin
        image: "dunjut/confv-install:0.1.0"
        command:
        - /bin/sh
        - -c
        - >
            mkdir /mnt/bin/dunjut~confv;
            cp /usr/local/bin/confv /mnt/bin/dunjut~confv/
        volumeMounts:
        - name: bin
          mountPath: /mnt/bin
      containers:
      - name: api-proxy
        image: "dunjut/kubectl:v1.10.0"
        imagePullPolicy: IfNotPresent
        args:
        - proxy
        - -u
        - /var/run/confv.sock
        volumeMounts:
        - name: run
          mountPath: /var/run
      volumes:
      - name: bin
        hostPath:
          path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
      - name: run
        hostPath:
          path: /var/run
